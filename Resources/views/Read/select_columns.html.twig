{% trans_default_domain 'upload_data' %}
<form id="upload_match_columns" class="form-horizontal"
      action="{{ app.request.getRequestUri() }}" method="post">
    <div class="modal-body">
        <table class="table table-bordered system-headers form-horizontal">
            <thead>
                <tr>
                    <th class="text-center">{{ 'table.expected_columns'|trans }}</th>
                    <th class="text-center">{{ 'table.file_columns'|trans }}</th>
                </tr>
            </thead>
            {% for name, options in match_info.configuredColumns %}
                <tr>
                    <td style="width: 50%">
                        <label class="control-label">{{ options.label|title }}</label>
                        {% if options.required %}<span class="text-danger">*</span>{% endif %}
                    </td>
                    <td>
                        <select name="columns[{{ name }}]" class="form-control file-header"
                                {% if options.required %}required="required" {% endif %}>
                            <option value="">- Seleccione -</option>
                            {% for index, file_header in match_info.fileHeaders %}
                                <option {% if match_info.matched(name, file_header) %}selected="selected"
                                        {% endif %}value="{{ index }}">{{ file_header|title }}</option>
                            {% endfor %}
                        </select>
                    </td>
                </tr>
            {% endfor %}
        </table>
    </div>

    <div class="modal-footer">
        <input type="submit" class="btn btn-primary" value="{{ 'button.process'|trans }}">
        <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'link.close'|trans }}</button>
    </div>

</form>

<script>
    function validateColumnsForm($form) {
        var $selectHeaders = $("select.file-header").toArray();

        for (var sh in $selectHeaders) {
            var $current = $($selectHeaders[sh]);
            var isBreak = false;
            if (!$current.val() && $current.is['[required]']) {
                return false;
            }
            var $otherSelects = $("select.file-header").not($current).toArray();
            for (var sh2 in $otherSelects) {
                if ($current.val() && $($otherSelects[sh2]).val() == $current.val()) {
                    alert('No pueden haber selects con el mismo valor seleccionado');
                    $($otherSelects[sh2]).focus();
                    return false;
                }
            }
        }

        return true;
    }

    $("#upload_match_columns").on('submit', function (e) {
        var $this = $(this);
        e.preventDefault();

        if (!validateColumnsForm($this)) {
            return false;
        }

        $this.find(':submit').button('loading');

        $.post(this.action, $this.serializeArray())
                .done(closeColumnsModal)
                .always(function () {
                    $this.find(':submit').button('reset');
                });
    });

    function closeColumnsModal(content, $form, $container, jqXhr) {
        $(".modal").modal('hide');
    }
</script>
